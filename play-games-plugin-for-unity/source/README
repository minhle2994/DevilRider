GOOGLE PLAY GAMES PLUGIN FOR UNITY

    Copyright (C) 2013 Google Inc.
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
 
        http://www.apache.org/licenses/LICENSE-2.0
 
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.


[ SOURCE OR BINARY? ]

    If you just want to *use* the plugin in your game (as opposed to modify it),
    this directory is the wrong place to look. There is a pre-built and ready-to-use
    version of the plugin in the "current-build" directory. Refer to the root
    README.md file for more information.


[ REPOSITORY CONTENTS ]

    GPGSUtils/
        Assembly with utility routines -- compiled to GPGSUtils.dll

    SupportLib/
        Source code for the Java support lib (the JAR file)

    PluginDev/
        Unity project for developing and debugging the plugin

    docgen/
        Source code documentation generation config.


[ HOW TO BUILD THE PLUGIN ]

1. If you've modified something in the GPGSUtils library:

    a. Open the GPGSUtils solution in MonoDevelop or equivalent and build
       GPGSUtils.dll. You may have to add a reference to the UnityEngine.dll
       assembly, available in your Unity installation.

    b. Copy GPGSUtils.dll to PluginDev/Assets/Plugins

2. If you've modified something in the support library (SupportLib)

    a. Rebuild the support library to generate the JAR
       (usually SupportLib/PlayGamesPluginSupport/build/bundles/debug/classes.jar)

    b. Copy that support library JAR to 
       PluginDev/Assets/Plugins/Android/play-games-plugin-support.jar

3. Open the PluginDev project in Unity

4. Export a Unity package through the "Google Play Games | Export Plugin Package"
   option.

Note: If you need to manually generate the plugin for whatever reason, the 
directories to export and files to exclude can be seen in the source code 
for the exporter (Assets/Editor/GPGSExportPackageUI.cs).

To test the plugin before exporting it, you can use the PluginDev project itself.
Simply configure it (by clicking File | Play Games Android Setup), and set up
your test achievement/leaderboard IDs in Assets/Settings.cs.

